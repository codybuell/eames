////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// MIXINS                                                                     //
//                                                                            //
// usage: @include [mixin name](arg1,arg2,arg3);                              //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

@mixin box-shadow($x:0px,$y:2px,$blur:12px,$spread:2px,$color:#000) {
    -moz-box-shadow:    $x $y $blur $spread $color;
    -webkit-box-shadow: $x $y $blur $spread $color;
    box-shadow:         $x $y $blur $spread $color;
}

@mixin box-shadow-inset($x:0px,$y:2px,$blur:12px,$spread:2px,$color:#000) {
    -moz-box-shadow:    inset $x $y $blur $spread $color;
    -webkit-box-shadow: inset $x $y $blur $spread $color;
    box-shadow:         inset $x $y $blur $spread $color;
}

@mixin border-radius ($x:5px) {
    -moz-border-radius: $x;
    -webkit-border-radius: $x;
    border-radius: $x; /* future proofing */
    -khtml-border-radius: $x; /* for old Konqueror browsers */
}

@mixin border-radius-top ($x:5px) {
    -moz-border-radius: 0px;
    -webkit-border-radius: $x $x 0px 0px;
    border-radius: $x $x 0px 0px; /* future proofing */
    -khtml-border-radius: $x $x 0px 0px; /* for old Konqueror browsers */
}

@mixin background-cover() {
    -webkit-background-size: cover !important;
    -moz-background-size: cover !important;
    -o-background-size: cover !important;
    background-size: cover !important;
}

@mixin background-normal() {
    -webkit-background-size: auto !important;
    -moz-background-size: auto !important;
    -o-background-size: auto !important;
    background-size: auto !important;
}

@mixin opacity($opacity) {
    $opacity-ie: round($opacity * 100);
    filter: alpha(opacity=$opacity-ie);
    opacity: $opacity;
    zoom: 1;
}

@mixin noselect() {
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -o-user-select: none;
    user-select: none;
}

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

// border box for cutting borders in rather than adding to width
@mixin border-box() {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

@mixin rotate($val) {
    -webkit-transform: rotate($val);
    -moz-transform: rotate($val);
    -ms-transform: rotate($val);
    -o-transform: rotate($val);
    transform: rotate($val);
}

@mixin font-face($family,$name,$weight,$style) {
    font-family: '$family';
    src: url('../fonts/$name.eot');
    src: url('../fonts/$name.eot?#iefix') format('embedded-opentype'),
         url('../fonts/$name.woff') format('woff'),
         url('../fonts/$name.ttf') format('truetype'),
         url('../fonts/$name.svg#$name') format('svg');
    font-weight: $weight;
    font-style: $style;
}
